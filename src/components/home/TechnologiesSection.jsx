import React, { useState } from "react";

// Technology Icon Components
const ReactIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#61DAFB]">
    <circle cx="12" cy="12" r="2" fill="currentColor"/>
    <path d="M12 1a11 11 0 0 0-11 11c0 2.5.9 4.8 2.4 6.6L12 24l8.6-5.4c1.5-1.8 2.4-4.1 2.4-6.6A11 11 0 0 0 12 1z" fill="none" stroke="currentColor" strokeWidth="1.5"/>
    <path d="M12 1a11 11 0 0 1 11 11c0 2.5-.9 4.8-2.4 6.6L12 24l-8.6-5.4C1.9 16.8 1 14.5 1 12A11 11 0 0 1 12 1z" fill="none" stroke="currentColor" strokeWidth="1.5"/>
  </svg>
);

const NextIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-white">
    <path d="M11.572 0c-.176 0-.31.001-.358.007a11.535 11.535 0 0 0-8.748 7.01A1.643 1.643 0 0 0 2.38 8.24v7.52c0 .58.352 1.1.89 1.32a11.536 11.536 0 0 0 8.748 7.01c.048.006.182.007.358.007s.31-.001.358-.007a11.536 11.536 0 0 0 8.748-7.01 1.643 1.643 0 0 0 .086-1.223 11.535 11.535 0 0 0-8.748-7.01A1.643 1.643 0 0 0 12.43 0h-.858zm.358 1.166c.1 0 .163.002.186.003a10.37 10.37 0 0 1 7.866 6.3 10.37 10.37 0 0 1-7.866 6.3c-.023.001-.086.003-.186.003s-.163-.002-.186-.003a10.37 10.37 0 0 1-7.866-6.3 10.37 10.37 0 0 1 7.866-6.3c.023-.001.086-.003.186-.003z" fill="currentColor"/>
    <path d="M12 6.5a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11z" fill="currentColor"/>
  </svg>
);

const TypeScriptIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8">
    <rect width="24" height="24" rx="4" fill="#3178C6"/>
    <path d="M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z" fill="white"/>
  </svg>
);

const NodeIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#339933]">
    <path d="M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.080-0.383 c0.585-0.203,0.703-0.250,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.990,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.570,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z" fill="currentColor"/>
  </svg>
);

const PythonIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8">
    <path d="M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.26-.02.2-.01h.14l.06.01h8.16v-.83H5.18l-.01-2.75-.02-.37.05-.34.1-.31.15-.28.2-.25.25-.22.3-.19.34-.16.38-.13.42-.1.46-.07.5-.04.54-.02.58-.01h.62l.66.02.6.05.54.08.48.11.42.14.36.17.3.2.24.23.18.25.12.27.07.28.02.29-.02.29-.07.28-.12.27-.18.25-.24.23-.3.2-.36.17-.42.14-.48.11-.54.08-.6.05-.66.02h-.62l-.58-.01-.54-.02-.5-.04-.46-.07-.42-.1-.38-.13-.34-.16-.3-.19-.25-.22-.2-.25-.15-.28-.1-.31-.05-.34-.02-.37.01-.37.02-.34.05-.31.08-.28.11-.25.14-.22.17-.19.2-.16.23-.13.26-.1.29-.07.32-.04.35-.02.38-.01h.42l.46.01zm-6.3 1.98c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm5.93 9.93c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5z" fill="#3776AB"/>
    <path d="M9.75 23.82l-.9-.2-.73-.26-.59-.3-.45-.32-.34-.34-.25-.34-.16-.33-.1-.3-.04-.26-.02-.2.01-.13V15.5l.05-.63.13-.55.21-.46.26-.38.3-.31.33-.25.35-.19.35-.14.33-.1.3-.07.26-.04.21-.02h5.48l.69-.05.59-.14.5-.22.41-.27.33-.32.27-.35.2-.36.15-.37.1-.35.07-.32.04-.27.02-.21v-3.06h3.06l.21.03.28.07.32.12.35.18.36.26.36.36.35.46.32.59.28.73.21.88.14 1.05.05 1.23-.06 1.22-.16 1.04-.24.87-.32.71-.36.57-.4.44-.42.33-.42.24-.4.16-.36.1-.32.05-.26.02-.2.01h-.14l-.06-.01H9.75v.83h8.66l.01 2.75.02.37-.05.34-.1.31-.15.28-.2.25-.25.22-.3.19-.34.16-.38.13-.42.1-.46.07-.5.04-.54.02-.58.01h-.62l-.66-.02-.6-.05-.54-.08-.48-.11-.42-.14-.36-.17-.3-.2-.24-.23-.18-.25-.12-.27-.07-.28-.02-.29.02-.29.07-.28.12-.27.18-.25.24-.23.3-.2.36-.17.42-.14.48-.11.54-.08.6-.05.66-.02h.62l.58.01.54.02.5.04.46.07.42.1.38.13.34.16.3.19.25.22.2.25.15.28.1.31.05.34.02.37-.01.37-.02.34-.05.31-.08.28-.11.25-.14.22-.17.19-.2.16-.23.13-.26.1-.29.07-.32.04-.35.02-.38.01h-.42l-.46-.01zm6.3-1.98c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-5.93-9.93c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5z" fill="#FFD43B"/>
  </svg>
);

const VueIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#4FC08D]">
    <path d="M24,1.61H14.06L12,5.16,9.94,1.61H0L12,22.39ZM12,14.08,5.16,2.23H9.59L12,6.41l2.41-4.18h4.43Z" fill="currentColor"/>
  </svg>
);

const AngularIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#DD0031]">
    <path d="M9.93 12.645h4.134L12 8.18l-2.07 4.465zM12 1L.5 4.5l1.5 13.5L12 23l10-5 1.5-13.5L12 1zm0 2.18L19.5 5.5l-1.2 10.5L12 20.5l-6.3-4.5L4.5 5.5L12 3.18z" fill="currentColor"/>
  </svg>
);

const TailwindIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#06B6D4]">
    <path d="M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 c1.177,1.194,2.538,2.576,5.512,2.576c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z" fill="currentColor"/>
  </svg>
);

const SwiftIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#FA7343]">
    <path d="M17.656 6.062c-.5-.5-1.125-.75-1.75-.75s-1.25.25-1.75.75c-.5.5-.75 1.125-.75 1.75s.25 1.25.75 1.75c.5.5 1.125.75 1.75.75s1.25-.25 1.75-.75c.5-.5.75-1.125.75-1.75s-.25-1.25-.75-1.75zm-1.75 2.5c-.375 0-.75-.125-1-.375-.25-.25-.375-.625-.375-1s.125-.75.375-1c.25-.25.625-.375 1-.375s.75.125 1 .375c.25.25.375.625.375 1s-.125.75-.375 1c-.25.25-.625.375-1 .375zm-2.5-5c-.5-.5-1.125-.75-1.75-.75s-1.25.25-1.75.75c-.5.5-.75 1.125-.75 1.75s.25 1.25.75 1.75c.5.5 1.125.75 1.75.75s1.25-.25 1.75-.75c.5-.5.75-1.125.75-1.75s-.25-1.25-.75-1.75zm-1.75 2.5c-.375 0-.75-.125-1-.375-.25-.25-.375-.625-.375-1s.125-.75.375-1c.25-.25.625-.375 1-.375s.75.125 1 .375c.25.25.375.625.375 1s-.125.75-.375 1c-.25.25-.625.375-1 .375zm-2.5-5c-.5-.5-1.125-.75-1.75-.75s-1.25.25-1.75.75c-.5.5-.75 1.125-.75 1.75s.25 1.25.75 1.75c.5.5 1.125.75 1.75.75s1.25-.25 1.75-.75c.5-.5.75-1.125.75-1.75s-.25-1.25-.75-1.75zm-1.75 2.5c-.375 0-.75-.125-1-.375-.25-.25-.375-.625-.375-1s.125-.75.375-1c.25-.25.625-.375 1-.375s.75.125 1 .375c.25.25.375.625.375 1s-.125.75-.375 1c-.25.25-.625.375-1 .375z" fill="currentColor"/>
  </svg>
);

const KotlinIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#7F52FF]">
    <path d="M1.3 24L12 2l10.7 22H1.3z" fill="currentColor"/>
  </svg>
);

const JavaIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#ED8B00]">
    <path d="M8.851 18.56c-.701 0-1.4-.179-2.001-.534-1.2-.71-1.899-2.135-1.899-3.713 0-.355.062-.71.179-1.042.117-.333.297-.631.534-.875.237-.244.534-.444.875-.578.341-.134.71-.2 1.089-.2.378 0 .747.066 1.089.2.341.134.638.334.875.578.237.244.417.542.534.875.117.332.179.687.179 1.042 0 1.578-.699 3.003-1.899 3.713-.601.355-1.3.534-2.001.534zm0-6.4c-.237 0-.474.045-.699.134-.225.089-.427.222-.593.4-.166.178-.296.4-.378.644-.082.244-.111.511-.082.778.029.267.111.522.237.744.126.222.296.4.499.522.203.122.434.178.667.178.233 0 .464-.056.667-.178.203-.122.373-.3.499-.522.126-.222.208-.477.237-.744.029-.267 0-.534-.082-.778-.082-.244-.212-.466-.378-.644-.166-.178-.368-.311-.593-.4-.225-.089-.462-.134-.699-.134z" fill="currentColor"/>
  </svg>
);

const AWSIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#FF9900]">
    <path d="M6.763 17.85c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5V7.85c0-.2.1-.4.2-.5.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5v9.3c0 .2-.1.4-.2.5-.1.1-.3.2-.5.2zm2.5 0c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5V7.85c0-.2.1-.4.2-.5.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5v9.3c0 .2-.1.4-.2.5-.1.1-.3.2-.5.2zm2.5 0c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5V7.85c0-.2.1-.4.2-.5.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5v9.3c0 .2-.1.4-.2.5-.1.1-.3.2-.5.2zm2.5 0c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5V7.85c0-.2.1-.4.2-.5.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5v9.3c0 .2-.1.4-.2.5-.1.1-.3.2-.5.2zm2.5 0c-.2 0-.4-.1-.5-.2-.1-.1-.2-.3-.2-.5V7.85c0-.2.1-.4.2-.5.1-.1.3-.2.5-.2s.4.1.5.2c.1.1.2.3.2.5v9.3c0 .2-.1.4-.2.5-.1.1-.3.2-.5.2z" fill="currentColor"/>
  </svg>
);

const DockerIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#2496ED]">
    <path d="M13.983 11.078h2.119a.186.186 0 00.186-.185V9.006a.185.185 0 00-.186-.185h-2.119a.185.185 0 00-.185.185v1.887c0 .102.083.185.185.185zm-4.3 0h2.12a.186.186 0 00.185-.185V9.006a.185.185 0 00-.185-.185H9.683a.185.185 0 00-.185.185v1.887c0 .102.083.185.185.185zm-4.299 0h2.119a.186.186 0 00.186-.185V9.006a.185.185 0 00-.186-.185H5.384a.185.185 0 00-.185.185v1.887c0 .102.083.185.185.185zm8.598-2.953h2.119a.186.186 0 00.186-.186V6.006a.185.185 0 00-.186-.185h-2.119a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185zm-4.3 0h2.12a.186.186 0 00.185-.186V6.006a.185.185 0 00-.185-.185H9.683a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185zm-4.299 0h2.119a.186.186 0 00.186-.186V6.006a.185.185 0 00-.186-.185H5.384a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185zm8.598-2.952h2.119a.186.186 0 00.186-.186V3.054a.185.185 0 00-.186-.185h-2.119a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185zm-4.3 0h2.12a.186.186 0 00.185-.186V3.054a.185.185 0 00-.185-.185H9.683a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185zm-4.299 0h2.119a.186.186 0 00.186-.186V3.054a.185.185 0 00-.186-.185H5.384a.185.185 0 00-.185.185v1.933c0 .102.083.185.185.185z" fill="currentColor"/>
  </svg>
);

const TensorFlowIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#FF6F00]">
    <path d="M1.292 5.856L11.54 0v24l-4.095-2.378V7.603l-6.168 3.564.015-5.31zm21.43 5.311l-.014-5.31L12.46 0v24l4.095-2.378V7.603l6.168 3.564z" fill="currentColor"/>
  </svg>
);

const EthereumIcon = () => (
  <svg viewBox="0 0 24 24" className="w-8 h-8 text-[#627EEA]">
    <path d="M11.944 17.97L4.58 13.62 11.943 24l7.37-10.38-7.372 4.35h.003zM12.056 0L4.69 12.223l7.365 4.354 7.365-4.35L12.056 0z" fill="currentColor"/>
  </svg>
);

export default function TechnologiesSection() {
  const [activeCategory, setActiveCategory] = useState("Web Development");

  const technologies = {
    "Web Development": {
      "Frontend": [
        { name: "React", icon: ReactIcon },
        { name: "Next.js", icon: NextIcon },
        { name: "Vue.js", icon: VueIcon },
        { name: "Angular", icon: AngularIcon },
        { name: "TypeScript", icon: TypeScriptIcon },
        { name: "Tailwind CSS", icon: TailwindIcon },
        { name: "Sass", icon: "💎" },
        { name: "GSAP", icon: "🎬" }
      ],
      "Backend": [
        { name: "Node.js", icon: NodeIcon },
        { name: "Express", icon: "🚀" },
        { name: "Python", icon: PythonIcon },
        { name: "Django", icon: "🎯" },
        { name: "FastAPI", icon: "⚡" },
        { name: "PostgreSQL", icon: "🐘" },
        { name: "MongoDB", icon: "🍃" },
        { name: "Redis", icon: "🔴" }
      ]
    },
    "Mobile Apps": {
      "iOS": [
        { name: "Swift", icon: SwiftIcon },
        { name: "UIKit", icon: "📱" },
        { name: "RxSwift", icon: "🔄" },
        { name: "Combine", icon: "🔗" },
        { name: "MVVM", icon: "🏗️" },
        { name: "Alamofire", icon: "🌐" },
        { name: "Core Data", icon: "💾" }
      ],
      "Android": [
        { name: "Kotlin", icon: KotlinIcon },
        { name: "MVVM", icon: "🏗️" },
        { name: "RxJava", icon: "🔄" },
        { name: "Java", icon: JavaIcon },
        { name: "Retrofit", icon: "🔌" },
        { name: "Jetpack", icon: "🚀" }
      ]
    },
    "Cross Platform": {
      "React Native": [
        { name: "React Native", icon: "📱" },
        { name: "Expo", icon: "🎪" },
        { name: "Redux", icon: "🔄" },
        { name: "Navigation", icon: "🧭" },
        { name: "AsyncStorage", icon: "💾" }
      ],
      "Flutter": [
        { name: "Flutter", icon: "🦋" },
        { name: "Dart", icon: "🎯" },
        { name: "Bloc", icon: "🧱" },
        { name: "Provider", icon: "📦" },
        { name: "Firebase", icon: "🔥" }
      ]
    },
    "Cloud & DevOps": {
      "Cloud Platforms": [
        { name: "AWS", icon: AWSIcon },
        { name: "Google Cloud", icon: "🌩️" },
        { name: "Azure", icon: "🔵" },
        { name: "Docker", icon: DockerIcon },
        { name: "Kubernetes", icon: "⚓" },
        { name: "Terraform", icon: "🏗️" }
      ],
      "CI/CD": [
        { name: "GitHub Actions", icon: "⚡" },
        { name: "Jenkins", icon: "🤖" },
        { name: "GitLab CI", icon: "🦊" },
        { name: "CircleCI", icon: "⭕" }
      ]
    },
    "AI & Machine Learning": {
      "Frameworks": [
        { name: "TensorFlow", icon: TensorFlowIcon },
        { name: "PyTorch", icon: "🔥" },
        { name: "Scikit-learn", icon: "📊" },
        { name: "OpenAI", icon: "🤖" },
        { name: "Hugging Face", icon: "🤗" }
      ],
      "Tools": [
        { name: "Jupyter", icon: "📓" },
        { name: "Pandas", icon: "🐼" },
        { name: "NumPy", icon: "🔢" },
        { name: "Matplotlib", icon: "📈" }
      ]
    },
    "Blockchain": {
      "Platforms": [
        { name: "Ethereum", icon: EthereumIcon },
        { name: "Solidity", icon: "💎" },
        { name: "Web3.js", icon: "🌐" },
        { name: "MetaMask", icon: "🦊" },
        { name: "IPFS", icon: "📁" }
      ],
      "Tools": [
        { name: "Truffle", icon: "🍰" },
        { name: "Hardhat", icon: "⛑️" },
        { name: "Remix", icon: "🎵" },
        { name: "Ganache", icon: "🍮" }
      ]
    }
  };

  const categories = Object.keys(technologies);

  return (
    <section className="py-20 bg-black">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
            Technologies We Use
          </h2>
          <p className="text-xl text-white/90 max-w-3xl mx-auto">
            Hire from our pool of 350+ specialized experts in web, mobile, and software engineering, 
            specializing in the latest technologies and frameworks, ready to scale your development teams effortlessly.
          </p>
        </div>

        <div className="grid lg:grid-cols-4 gap-8">
          {/* Categories Sidebar */}
          <div className="lg:col-span-1">
            <div className="space-y-2">
              {categories.map((category) => (
                <button
                  key={category}
                  onClick={() => setActiveCategory(category)}
                  className={`w-full text-left px-4 py-3 rounded-lg transition-all duration-300 ${
                    activeCategory === category
                      ? "bg-[#bfa45a] text-black font-semibold"
                      : "text-white/80 hover:text-white hover:bg-white/5"
                  }`}
                >
                  {category}
                </button>
              ))}
            </div>
          </div>

          {/* Technologies Display */}
          <div className="lg:col-span-3">
            <div className="space-y-8">
              {Object.entries(technologies[activeCategory]).map(([platform, techs]) => (
                <div key={platform}>
                  <h3 className="text-2xl font-bold text-white mb-6">{platform}</h3>
                  <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                    {techs.map((tech, index) => {
                      const IconComponent = tech.icon;
                      return (
                        <div
                          key={index}
                          className="tech-card group relative bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-4 hover:bg-gray-700/50 hover:border-[#bfa45a]/50 transition-all duration-300 cursor-pointer"
                        >
                          <div className="flex flex-col items-center text-center space-y-3">
                            <div className="flex items-center justify-center w-12 h-12 bg-gray-900/50 rounded-lg group-hover:scale-110 transition-transform duration-300">
                              {typeof IconComponent === 'string' ? (
                                <span className="text-2xl">{IconComponent}</span>
                              ) : (
                                <IconComponent />
                              )}
                            </div>
                            <span className="text-white text-sm font-medium group-hover:text-[#bfa45a] transition-colors duration-300">
                              {tech.name}
                            </span>
                          </div>
                          
                          {/* Glassmorphism overlay effect */}
                          <div className="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}